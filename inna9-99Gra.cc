#define _ALE_ZLY_STYL_BIBLIOTEK_

#include "grafika1.cc"

#include "macierze1.c"

#define RX (1200)
#define RY (700)

Projektor P(RX,RY);
Klawiatura K;

// i=0..99

//krotnosc brzegow - 1 (dla jedynki krotnosc wynosi dwa, dla zera jeden, dla dwoch trzy itp.)
#define BRZ_KR (2)
//#define BRZ_KR (0)
//#define BRZ_KR (4)
//#define BRZ_KR (3)

double x[100+BRZ_KR*2];

double f[100+BRZ_KR*2] = {
//  0,0,0,0,0,0,0,0,0,0,
//  0,0,0,0,0,0,0,0,0,0,
//  0,0,0,0,0,0,0,0,0,0,
  //0,0,
  //0,0,0,0,
  //0,0,0,
  0,0,
  68.000000, 68.000000, 68.000000, 68.000000, 68.000000, 68.000000, 68.000000, 68.000000, 69.000000, 68.000000, 
  68.000000, 69.000000, 69.000000, 68.000000, 69.000000, 69.000000, 69.000000, 69.000000, 69.000000, 69.000000, 
  69.000000, 69.000000, 69.000000, 69.000000, 69.000000, 69.000000, 69.000000, 70.000000, 69.000000, 69.000000, 
  70.000000, 70.000000, 70.000000, 70.000000, 70.000000, 70.000000, 70.000000, 70.000000, 70.000000, 71.000000, 
  70.000000, 71.000000, 71.000000, 70.000000, 71.000000, 71.000000, 71.000000, 71.000000, 71.000000, 71.000000, 
  72.000000, 71.000000, 72.000000, 72.000000, 72.000000, 72.000000, 72.000000, 73.000000, 73.000000, 73.000000, 
  73.000000, 73.000000, 73.000000, 73.000000, 74.000000, 74.000000, 74.000000, 74.000000, 75.000000, 75.000000, 
  75.000000, 75.000000, 76.000000, 76.000000, 76.000000, 76.000000, 77.000000, 78.000000, 77.000000, 78.000000, 
  79.000000, 78.000000, 79.000000, 80.000000, 80.000000, 80.000000, 81.000000, 82.000000, 83.000000, 82.000000, 
  84.000000, 85.000000, 86.000000, 86.000000, 84.000000, 86.000000, 87.000000, 87.000000, 89.000000, 91.000000,
  0,0
  //0,0,0
  //0,0,0,0
  //0,0
//  0,0,0,0,0,0,0,0,0,0,
//  0,0,0,0,0,0,0,0,0,0,
//  0,0,0,0,0,0,0,0,0,0
};

#define ZOOM (5)

double wielomian(double x, double a[n]) {
	return a[0]+x*a[1]+x*x*a[2];
}
  
int main(int argc, char** argv) {
  int i;
  double ii;
  double odp[n];

  P.czysc(0x0060ff);
  P.linia(10,10,90,90,0xff0000);

  for(i=BRZ_KR;i<100+BRZ_KR;++i) {
    x[i]=(double)(i-BRZ_KR);
    P.prostokat(100+ZOOM*i,10+ZOOM*f[i],ZOOM,ZOOM,0xffff);
  }
  
  /*
  for(i=0;i<30;++i) {
     x[i]=30;
     f[i]=f[30];
     x[130+i]=129;
     f[130+i]=f[129];
  }
  */
/*
  for(i=0;i<BRZ_KR;++i) {
     x[i]=0;
     f[i]=f[BRZ_KR];
     x[100+BRZ_KR+i]=99;
     f[100+BRZ_KR+i]=f[100+BRZ_KR-1];
  }
*/  
  for(i=0;i<BRZ_KR;++i) {
     x[i]=i%2;
     f[i]=f[BRZ_KR+(i%2)];
     x[100+BRZ_KR+i]=99-(i%2);
     f[100+BRZ_KR+i]=f[100+BRZ_KR-(i%2)-1];
  }

  aproksymacjaWielomianemStopniaDwa(x,f,odp,100+2*BRZ_KR);
  
  for(ii=0.0;ii<100;++ii) {
    P.prostokat(100+ZOOM*ii, 100+ZOOM*wielomian((ii+BRZ_KR),odp),ZOOM,ZOOM,0xff00ff);
    P.prostokat(100+ZOOM*ii, 100+ZOOM*f[(int)(ii+BRZ_KR)],ZOOM,ZOOM,0xffff);
  }
  
  P.odswiez();
  K.czekajNaKlawisz();
}   
